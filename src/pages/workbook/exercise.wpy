<style lang="less" scoped>
.flex {
  display: flex;
  flex-wrap: wrap;
}
.btn_exercise{
  background: #EDF9F8;
  color: #3fc6c6;
  height: 90rpx;
  width: 90rpx;
  text-align: center;
  line-height: 90rpx;
  display: inline-block;
  border-radius: 50%;
  border: none;
  margin:15rpx 0 15rpx 20rpx;
}
.is_checked {
  color: #fff;
  background: #FF7043;
}
.footer{
  position: fixed;
  bottom: 30rpx;
  width: 100%;
}
</style>

<template>
  <view class="container">
    <toast id="toast"></toast>
    <zanNoticebar1 :text="longText" componentId="static1" ></zanNoticebar1>
    <view class="zan-panel" style='margin-top: 5rpx;'>
      <repeat for="{{ exercise.nodes }}" key="pindex" index="pindex" item="nodes">
        <view class="zan-panel-title zan-font-bold zan-c-black">{{ nodes.name }}</view>
        <view class="zan-cell flex">
          <repeat for="{{ nodes.questions }}" key="index" index="index" item="questions">
            <button class="zan-btn btn_exercise {{questions.answer ? '' : 'is_checked'}}" @tap="_change({{pindex}}, {{index}})">{{ questions.name }}</button>
          </repeat>
        </view>
      </repeat>
    </view>
    <view class="zan-row footer">
      <button class="zan-col zan-col-18 zan-col-offset-3 zan-btn zan-btn--primary" @tap='_upload'>记完了</button>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import Toast from 'wepy-com-toast'
import zanNoticebar from '@/components/zan-noticebar'

export default class WorkbookExercise extends wepy.page {
  components = {
    zanNoticebar1: zanNoticebar,
    toast: Toast
  }

  data = {
    longText: '点错题题号完成记错，提交作业查看我的错题',
    charpterId: '',
    exercise: []
  }

  methods = {
    /** 上传错题 */
    _upload () {
      let answerId = []
      let answer = []
      for (let nodes of this.exercise.nodes) {
        for (let questions of nodes.questions) {
          answerId.push(questions.id)
          answer.push(questions.answer)
        }
      }
      this._setExerciseResult(answerId, answer, this.charpterId)
    },
    /** 记错的切换 */
    _change (pindex, index) {
      let answer = this.exercise.nodes[pindex]['questions'][index]['answer']
      this.exercise.nodes[pindex]['questions'][index]['answer'] = !answer
      this.$apply()
    }
  }

  /** 获取章节习题 */
  _getExercise (id) {
    return new Promise((resolve, reject) => {
      wepy.request({
        url: 'https://primary.guinaben.com/workbook/chapter/exercise',
        data: {
          chapterId: id
        },
        success (res) {
          resolve(res)
        },
        fail (err) {
          reject(err)
        }
      })
    })
  }

  /** 设置练习结果 */
  _setExerciseResult (ids, answers, chapterId) {
    wepy.showLoading({title: '提交中'})
    return new Promise((resolve, reject) => {
      wepy.request({
        url: 'https://primary.guinaben.com/workbook/chapter/setExercise',
        method: 'POST',
        data: {
          chapterId: chapterId,
          answer: answers,
          answerId: ids
        },
        success (res) {
          wepy.navigateBack()
          resolve(res)
        },
        fail (err) {
          reject(err)
        },
        complete () {
          wepy.hideLoading()
        }
      })
    })
  }

  async onLoad(options) {
    wx.setNavigationBarTitle({ title: options.name })
    this.charpterId = options.id
    this.exercise = await this._getExercise(options.id)
    this.$apply()
  }

  onReady() {
    this.$invoke('zanNoticebar1', 'initZanNoticeBarScroll')
  }
}
</script>
