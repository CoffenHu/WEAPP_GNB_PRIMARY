<style lang='less'>
@import 'common/libs/zanui/index.wxss';
.container {
  background: #F9F9F9;
  overflow: hidden;
  min-height: 100vh;
  box-sizing: border-box;
  padding: 15px 0;
}
.container::before {
  position: fixed;
  top: 0;
  left: 0;
  content: ' ';
  width: 100%;
  height: 1rpx;
  background-color: #e2e2e2;
  z-index: 5;
}
.zan-btn--primary{
  background-color: #3fc6c6;
}
.zan-card{
  background-color: #fff;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'features/workbook/index',
      'pages/index',
      'features/init/grade',
      'features/init/workbook',
      'features/my/index',
      'features/my/info',
      'features/my/pay',
      'features/statistics/index',
      'features/workbook/want'
    ],
    tabBar: {
      color: '#aaa',
      selectedColor: '#3FC6C6',
      borderStyle: 'black',
      backgroundColor: '#ffffff',
      list: [{
        pagePath: 'features/workbook/index',
        iconPath: 'common/resources/workbook.png',
        selectedIconPath: 'common/resources/workbook_select.png',
        text: '记错题'
      }, {
        pagePath: 'features/statistics/index',
        iconPath: 'common/resources/statistics.png',
        selectedIconPath: 'common/resources/statistics_select.png',
        text: '错题本'
      }, {
        pagePath: 'features/my/index',
        iconPath: 'common/resources/user.png',
        selectedIconPath: 'common/resources/user_select.png',
        text: '我的'
      }]
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#FBFBFB',
      navigationBarTitleText: '错题归纳本小学数学',
      navigationBarTextStyle: 'black'
    },
    networkTimeout: {
      request: 8000,
      downloadFile: 8000
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    // this.testAsync()
  }

  // sleep (s) {
  //   return new Promise((resolve, reject) => {
  //     setTimeout(() => {
  //       resolve('promise resolved')
  //     }, s * 1000)
  //   })
  // }

  // async testAsync () {
  //   const data = await this.sleep(3)
  //   console.log(data)
  // }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
